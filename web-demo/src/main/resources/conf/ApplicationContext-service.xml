<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
    <context:property-placeholder location="classpath*:conf/*-config.properties" />
	<!-- @Service扫描 -->
	<context:component-scan base-package="cn.jyc.demo.service"></context:component-scan>
	
	
	
    <!-- Redis配置 -->  
    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg name="redisOperations" ref="redisTemplate" />
        <constructor-arg name="cacheNames">
            <set><value>cache_main</value><value>cache_session</value><value>cache_verifycode</value></set>
        </constructor-arg>
        <property name="expires">
            <map><entry key="cache_session" value="1800"/><entry key="cache_verifycode" value="120"/></map>
        </property>
    </bean>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jeidsConnectionFactory" />
        <property name="enableTransactionSupport" value="false"/>
        <property name="keySerializer">  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
        </property>
        <property name="hashKeySerializer">  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
        </property>
        <property name="defaultSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"
          p:maxTotal="${redis.maxTotal:64}" p:maxIdle="${redis.maxIdle:8}" p:minIdle="${redis.minIdle:0}"
          p:maxWaitMillis="${redis.maxWaitMillis:-1}" p:testOnBorrow="${redis.testOnBorrow:false}"/>
    <bean id="jeidsConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg name="sentinelConfig" ref="redisSentinelConfig" />
        <constructor-arg name="poolConfig" ref="jedisPoolConfig" />
        <property name="database" value="${redis.dbIndex}"/>
        <property name="password" value="${redis.password}"/>
    </bean>
    <bean id="redisSentinelConfig" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <constructor-arg name="master" value="mymaster" />
        <constructor-arg name="sentinelHostAndPorts">
            <set>
                <value>${redis.sentinels.node1}</value>
                <value>${redis.sentinels.node2}</value>
                <value>${redis.sentinels.node3}</value>
            </set>
        </constructor-arg>
    </bean> 
</beans>